Blurb::
Select a surrogate model with global support
Description::
The global surrogate model requires specification of one of the
following approximation types:
<ol>
  <li> Polynomial </li>
  <li> Gaussian process (Kriging interpolation) </li>
  <li> Layered perceptron artificial neural network approximation </li>
  <li> MARS </li>
  <li> Moving least squares </li>
  <li> Radial basis function
  <li> Voronoi Piecewise Surrogate (VPS)
</ol>
All these approximations are implemented
in SurfPack \cite Giunta2006, except for VPS. In addition, a second version of
Gaussian process is implemented directly in %Dakota.

<b> Training Data </b>

Training data can be taken from prior runs, stored in a datafile,
or by running a Design of Experiments method. The keywords listed
below are used to determine how to collect training data:
\li \c dace_method_pointer
\li \c reuse_points
\li \c import_points_file
\li \c use_derivatives
The source of training data 
is determined by the contents of a provided \c import_points_file,
whether \c reuse_points and \c use_derivatives are specified,
and the contents of the method block specified by \c dace_method_pointer.
\c use_derivatives is a special case, the other keywords are discussed below.

The number of training data points used in building a global approximation is
determined by specifying one of three point counts:

<ol>
  <li> \c minimum_points: minimum required or minimum "reasonable"
       amount of training data. Defaults to d+1 for d input dimensions
       for most models, e.g., polynomials override to the number of
       coefficients required to estimate the requested order.</li>

  <li> \c recommended_points: recommended number of training data,
       (this is the default option, if none of the keywords is
       specified).  Defaults to 5*d, except for polynomials where it's
       equal to the minimum.</li>

  <li> \c total_points: specify the number of training data points. 
     However, if the \c total_points value is less than the default 
     \c minimum_points value, the \c minimum_points value is used. </li>
</ol>

The sources of training data depend on the number of training points,
\f$ N_{tp} \f$, the number of points in the import file, \f$ N_{if} \f$, 
and the value of \c reuse_points.
<ul>
<li> If there is no import file, all training data come from the DACE method </li>
<li> If there is an import file, all \f$ N_{if} \f$ points from the file are used,
  and the remaining \f$ N_{tp} - N_{if} \f$ points come from the DACE method </li>
<li> If there is an import file and \c reuse_points is:
  <ul>
  <li> \c none - all \f$ N_{tp} \f$ points from DACE method
  </li>
  <li> \c region - only the points within a trust region are taken from the
    import file, and all remaining points are from the DACE method.
  </li>
  <li> \c all - (Default) all \f$ N_{if} \f$ points from the file are used,
  and the remaining \f$ N_{tp} - N_{if} \f$ points come from the DACE method
  </li>
  </ul>
</li>
</ul>


<b> Surrogate Correction </b>

A \c correction model can be added to the constructed surrogate in
order to better match the training data. The specified correction method will be applied to the surrogate, and then the corrected 
surrogate model is used by the method.

Finally, the quality of the surrogate can be tested using the 
\c metrics and \c challenge_points_file keywords.

Topics::
Examples::
Theory::
Global methods, also referred to as response surface methods,
involve many points spread over the parameter ranges of interest.
These surface fitting methods work in conjunction with the sampling
methods and design of experiments methods.


<b> Procedures for Surface Fitting </b>

The surface fitting process consists of three steps:
<ol>
  <li> selection of a set of design points
  </li>
  <li> evaluation of the true response quantities
  (e.g., from a user-supplied simulation code) at these design points,
  </li>
  <li> using the response data to solve for the unknown coefficients
  (e.g., polynomial coefficients, neural network weights, kriging
  correlation factors) in the surface fit model.
  </li>
</ol>
In cases where there is
more than one response quantity (e.g., an objective function plus one
or more constraints), then a separate surface is built for each
response quantity. Currently, the surface fit models are built using
only 0\f$^{\mathrm{th}}\f$-order information (function values only), although
extensions to using higher-order information (gradients and Hessians)
are possible.

Each surface fitting method employs a different
numerical method for computing its internal coefficients. For example,
the polynomial surface uses a least-squares approach that employs a
singular value decomposition to compute the polynomial coefficients,
whereas the kriging surface uses Maximum Likelihood Estimation to
compute its correlation coefficients. More information on the
numerical methods used in the surface fitting codes is provided in the
Dakota Developers Manual.


Faq::
See_Also::	model-surrogate-local, model-surrogate-hierarchical, model-surrogate-multipoint
