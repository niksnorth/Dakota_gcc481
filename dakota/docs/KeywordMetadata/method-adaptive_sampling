Blurb:: 
(Experimental) Adaptively refine a Gaussian process surrogate

Description:: 
This is an experimental capability that is not ready for production
use at this point.  It was part of an investigation into computational
topology-based approaches to feature identification and surrogate
refinement.

The goal in performing adaptive sampling is to construct a surrogate model that
can be used as an accurate predictor to some expensive simulation, thus it is
to one's advantage to build a surrogate that minimizes the error over the entire
domain of interest using as little data as possible from the expensive
simulation. The adaptive part alludes to the fact that the surrogate will be
refined by focusing samples of the expensive simulation on particular areas of
interest rather than rely on random selection or standard space-filling
techniques.
 
At a high-level, the adaptive sampling pipeline is a four-step process:
<ul>
<li> Evaluate the expensive simulation (referred to as the true model) at
initial sample point
<ol>
 <li> Fit a surrogate model
 <li> Create a candidate set and score based on information from surrogate
 <li> Select a candidate point to evaluate the true model 
 <li> Loop until done
</ol>
</ul>
 
In terms of the %Dakota implementation, the adaptive sampling method
currently uses Latin Hypercube sampling (LHS) to generate the initial
points in Step 1 above. For Step 2, we use a Gaussian process model.

The default behavior is to add one point at a time.
At each iteration (e.g. each loop of Steps 2-4 above), a Latin Hypercube 
sample is generated (a new one, different from the initial sample) and 
the surrogate model is evaluated at this points. 
These are the candidate points that are then evaluated
according to the fitness metric. The number of candidates used
in practice should be high enough to fill most
of the input domain: we recommend at least hundreds of points 
for a low-dimensional problem.
All of the candidates (samples on the emulator) are
given a score and then the highest-scoring candidate is selected to be evaluated
on the true model.
 
The adaptive sampling method also can generate batches of points
to add at a time using the \c batch_selection and \c batch_size keywords.


Topics::         uncertainty_quantification	
Examples::
Theory::
Faq::
See_Also::	method-gpais, method-local_reliability, method-global_reliability, method-sampling, method-importance_sampling, method-polynomial_chaos, method-stoch_collocation
