Blurb::
Hessians are needed and will be approximated by finite differences

Description::
The \c numerical_hessians specification means that Hessian information
is needed and will be computed with finite differences using either
first-order gradient differencing (for the cases of \c
analytic_gradients or for the functions identified by \c
id_analytic_gradients in the case of \c mixed_gradients) or first- or
second-order function value differencing (all other gradient
specifications). In the former case, the following expression
\f[
\nabla^2 f ({\bf x})_i \cong 
\frac{\nabla f ({\bf x} + h {\bf e}_i) - \nabla f ({\bf x})}{h}
\f]
estimates the \f$i^{th}\f$ Hessian column, and in the latter case, the
following expressions
\f[
\nabla^2 f ({\bf x})_{i,j} \cong \frac{f({\bf x} + h_i {\bf e}_i + h_j {\bf e}_j) - 
f({\bf x} + h_i {\bf e}_i) - 
f({\bf x} - h_j {\bf e}_j) + 
f({\bf x})}{h_i h_j}
\f]
and
\f[
\nabla^2 f ({\bf x})_{i,j} \cong \frac{f({\bf x} + h {\bf e}_i + h {\bf e}_j) - 
f({\bf x} + h {\bf e}_i - h {\bf e}_j) - 
f({\bf x} - h {\bf e}_i + h {\bf e}_j) + 
f({\bf x} - h {\bf e}_i - h {\bf e}_j)}{4h^2}
\f]
provide first- and second-order estimates of the \f$ij^{th}\f$ Hessian term.
Prior to %Dakota 5.0, %Dakota always used second-order estimates.
In %Dakota 5.0 and newer, the default is to use first-order estimates
(which honor bounds on the variables and
require only about a quarter as many function evaluations
as do the second-order estimates), but specifying <tt>central</tt>
after <tt>numerical_hessians</tt> causes %Dakota to use the old second-order
estimates, which do not honor bounds. In optimization algorithms that
use Hessians, there is little reason to use second-order differences in
computing Hessian approximations.

<!--
The \c fd_hessian_step_size specifies the relative finite difference
step size to be used in these differences. Either a single value may
be entered for use with all parameters, or a list of step sizes may be
entered, one for each parameter. When the interval scaling type is \c
absolute, the differencing intervals are \c fd_hessian_step_size.
When the interval scaling type is \c bounds, the differencing
intervals are computed by multiplying the \c fd_hessian_step_size with
the range of the parameter. When the interval scaling type is \c
relative, the differencing intervals are computed by multiplying the
\c fd_hessian_step_size with the current parameter value. A minimum
absolute differencing interval of <tt>.01*fd_hessian_step_size</tt> is
used when the current parameter value is close to zero.
-->


Topics::	
Examples::
Theory::
Faq::
See_Also::	responses-no_hessians, responses-quasi_hessians, responses-analytic_hessians, responses-mixed_hessians
