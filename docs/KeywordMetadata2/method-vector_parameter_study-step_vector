Blurb::
Size of step for each variable
Description::
The \c step_vector keyword specifies how much each variable will be
incremented in a single step.
 
\c step_vector works in conjunction with \c num_steps, which determines 
the number of steps taken during the \c vector_parameter_study. If instead 
of \c step_vector, \c final_point is specified with \c num_steps, %Dakota will
infer the step sizes.

Entries in the \c step_vector are the actual amounts by which continuous and range 
variables are incremented. For set variables, \c step_vector entries
are interpreted as indexes into the underlying set.

<b> Default Behavior </b>

The user is required to specify either \c final_point or \c step_vector.  
There is no default definition for the vector.

Topics::
Examples::
\verbatim
variables
  continuous_design 1
    initial_point 1.0
    descriptors 'x1'
  discrete_design_set
    string 1
     elements 'bar' 'baz' 'foo' 'fuzz'
     initial_point 'bar'
     descriptors 's1'

method
  vector_parameter_study
    num_steps = 3
    # Add 2.0 to x1 and increment s1 by 1 element in each step
    step_vector =    2.0      1
\endverbatim
Theory::
Faq::
See_Also::	
