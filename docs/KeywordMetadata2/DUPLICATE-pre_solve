Blurb:: Perform deterministic optimization for MAP before Bayesian calibration

Description::

When specified, Dakota will perform a deterministic derivative-based
optimization to maximize the log posterior (minimize the negative log
posterior = misfit - log_prior + constant normalization factors).  The
Markov chain in Bayesian calibration will subsequently be started at
the best point found in the optimization (the MAP point), which can
eliminate the need for "burn in" of the chain in which some initial
portion of the chain is discarded. <!-- (points early in the search
prior to navigation towards higher probability regions)-->
Note that both optimization methods available (\c sqp and \c nip)
require derivatives of the negative log posterior, either first-order
in the case of SQP (with quasi-Newton Hessians from secant updates) or
second-order in the case of full-Newton NIP (with explicit Hessian
use).  The derivatives will be computed from the same model used for
the MCMC process; e.g. if an emulator is used, the emulator
derivatives will be used, otherwise they will be based on the user's
model specification for the model.
<!--either finite-difference or analytic gradients),-->
It is important to clarify that the use of the Hessian of the negative
log posterior within a full Newton solver does not strictly require
Hessians from the model response quantities of interest (QoIs).
Rather, the Hessian of the negative log posterior is formed from an
exact Hessian of the negative log prior and a misfit Hessian that can
be either exact or approximated: the full misfit Hessian can be formed
using QoI residuals, gradients, and Hessians or the Gauss-Newton
approximate misfit Hessian can be formed using only QoI gradients
\cite TheoMan.  This Hessian composition is configured automatically
based on MAP solver selection and the emulator's or simulation model's
support for derivatives.

<b> Default Behavior </b>
The default MAP pre-solve behavior depends on the use of an emulator
model within the inference process.

If there is an emulator (for which derivatives are easily computed),
then the MAP pre-solve is active by default and a full Newton NIP
formulation is selected if OPT++ is available.  The default use of a
MAP pre-solve can be overridden using "pre_solve none" and the default
selection of OPT++ full Newton NIP can be replaced with NPSOL SQP
using "pre_solve sqp."  Depending on the emulator's support for
derivatives of the simulated QoI (gradients for dakota GP and
stochastic collocation; gradients and Hessians for surfpack GP and
polynomial chaos), the contribution of the misfit Hessian to the
Hessian of the negative log posterior will be computed either using
the full misfit Hessian or its Gauss-Newton approximation (refer to
Bayesian chapter in \cite TheoMan).

If no emulator model is specified, then the pre-solve is bypassed by
default and the MCMC chain is initiated from user-specified (or
default) initial value for the prior distributions of the random
variables.  This default can be overridden by specifying "pre_solve
nip" for a full Newton NIP solution or "pre_solve sqp" for an NPSOL
SQP solution.  Both MAP pre-solve approaches require QoI gradients
from the simulation model, and the full Newton approach can further
leverage QoI Hessians when available (though not required due to the
Gauss-Newton approximation, as explained previously).

<b> Expected Output </b>
When pre-solve is enabled, the output will include a deterministic
optimization, followed by a Bayesian calibration.  The final results
will include the MAP point as well as posterior statistics from the
MCMC chain.  The MAP point that is reported is the point with highest
posterior probability spanning both the pre-solve and the subsequent
MCMC chain; it will most commonly reflect the end state of the
pre-solve, although it can reflect subsequent improvements from the
chain evolution, should they occur.

Topics::

Examples::
\verbatim
method
  bayes_calibration queso
    samples = 2000 seed = 348
    delayed_rejection
    emulator
      pce sparse_grid_level = 2
      pre_solve nip # default for emulators
\endverbatim

Theory::
Faq::
See_Also::
